Дана прямоугольная доска N × M (N строк и M столбцов). 
В левом верхнем углу находится шахматный конь, которого необходимо переместить в правый нижний угол доски.
При этом конь может ходить ТОЛЬКО на две клетки вниз и на одну клетку вправо, либо на две клетки вправо и на одну клетку вниз. 
Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый нижний угол.
  
#include <iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    int dp[n][m];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (i == 0 && j == 0) {
                dp[i][j] = 1;
            } else {
                dp[i][j] = 0;
            }
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (i >= 2 && j >= 1) {
                dp[i][j] += dp[i-2][j-1];
            }
            if (i >= 1 && j >= 2) {
                dp[i][j] += dp[i-1][j-2];
            }
        }
    }
    cout << dp[n-1][m-1];
    return 0;
}
